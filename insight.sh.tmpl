#!/bin/bash

# insight.sh
# periodically check for login attempts and catch 'em

function log()  { echo -e "$(date '+%Y-%m-%d %H:%M:%S')  $@"; }

LOGIN_LOG="{{authLog}}";
RUNTIME_SECONDS=30;

INSIGHT_DIR="{{insightPath}}";
INSIGHT_SAW="$INSIGHT_DIR/saw";
INSIGHT_LOGS="{{logs}}";
LOGIN_ATTEMPT_PATT='Got user';
WAKE_PATT='Wake reason';
OLD_LOG="$INSIGHT_LOGS/auth.log.old";
CUR_LOG="$INSIGHT_LOGS/auth.log.cur";

# be insightful
function insightful() {
  [[ -d "$INSIGHT_SAW" ]] || mkdir -p $INSIGHT_SAW
  {{bin}}/imagesnap -w 1.5 "$INSIGHT_SAW/$(date "+%Y_%m_%d-%H_%M_%S").jpg" &
  {{bin}}/onInsight &
  log 'Insight saw and executed.'
}

# diff log from last run and determine if there were login attempts
function insight() {
  local loginAttempts
  #create insight dir and initial log
  if [[ ! -e "$CUR_LOG" ]]; then
    mkdir -p $INSIGHT_LOGS
    cp $LOGIN_LOG $CUR_LOG
  fi

  # refresh log, backup old
  cp $CUR_LOG $OLD_LOG
  cp $LOGIN_LOG $CUR_LOG

  # diff current with old
  loginAttempts="$(diff $CUR_LOG $OLD_LOG | grep "$LOGIN_ATTEMPT_PATT")"
  wakes="$(diff $CUR_LOG $OLD_LOG | grep "$WAKE_PATT")"
  if [[ "$loginAttempts" ]]; then
    log 'Login attempt found!'
    log "$loginAttempts"
    insightful
  fi
  if [[ "$wakes" ]]; then
    log 'Wakeup found!'
    log "$wakes"
    insightful
  fi
}

#run for 30 seconds, polling every second
start=$(date +%s)
prev=

until (( $(date +%s) >= $start + $RUNTIME_SECONDS )); do
    new=$(stat -f %m $LOGIN_LOG)
    [[ $prev != $new ]] && insight
    prev=$new
    sleep 1
done
