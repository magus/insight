#!/bin/bash

# insight.sh
# periodically check for login attempts and catch 'em

function log()   { echo -e "$(date '+%Y-%m-%d %H:%M:%S')  $@"; }

LOGIN_LOG="{{authLog}}";
RUNTIME_SECONDS=30;

INSIGHT_DIR="{{insightPath}}";
INSIGHT_SAW="$INSIGHT_DIR/saw";
LOGIN_ATTEMPT_PATT='Got user';
OLD_LOG="{{logs}}/auth.log.old";
CUR_LOG="{{logs}}/auth.log.cur";

# diff log from last run and determine if there were login attempts
function insight() {
  local loginAttempts 
  #create insight dir and initial log
  if [[ ! -d "$INSIGHT_DIR" ]]; then
    mkdir $INSIGHT_DIR
    cp $LOGIN_LOG $CUR_LOG
  fi

  # refresh log, backup old
  cp $CUR_LOG $OLD_LOG
  cp $LOGIN_LOG $CUR_LOG

  # diff current with old
  loginAttempts="$(diff $CUR_LOG $OLD_LOG | grep "$LOGIN_ATTEMPT_PATT")"
  if [[ "$loginAttempts" ]]; then
    log 'Login attempt found!'
    log "$loginAttempts"
    [[ -d "$INSIGHT_SAW" ]] || mkdir -p $INSIGHT_SAW
    {{bin}}/imagesnap "$INSIGHT_SAW/$(date "+%Y_%m_%d-%H_%M_%S").jpg"
    {{bin}}/onInsight
    log 'Insight saw and executed.'
  fi
}

#run for 30 seconds, polling every second
start=$(date +%s)
prev=

until (( $(date +%s) >= $start + $RUNTIME_SECONDS )); do
    new=$(stat -f %m $LOGIN_LOG)
    [[ $prev != $new ]] && insight
    prev=$new
    sleep 1
done
